04/10/2021 12:24:07:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 12:24:48:sharding script was run with following arguments: {'shard_size': 32}
04/10/2021 12:24:57:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 12:25:01:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 12:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:25:30:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
04/10/2021 12:28:54:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 12:29:57:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 12:30:08:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 12:30:49:sharding script was run with following arguments: {'shard_size': 32}
04/10/2021 12:30:57:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 12:31:02:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 12:31:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 12:31:29:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
04/10/2021 12:31:56:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
04/10/2021 02:49:53:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 02:50:31:sharding script was run with following arguments: {'shard_size': 32}
04/10/2021 02:50:41:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 02:50:45:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 02:50:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:50:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 02:51:14:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
04/10/2021 02:51:15:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
04/10/2021 02:54:18:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
04/10/2021 02:54:19:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
04/10/2021 02:54:34:trainer script was run with following arguments: {'amp': False, 'epochs': 3, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
04/10/2021 04:04:56:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 04:05:00:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 04:05:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:05:30:trainer script was run with following arguments: {'amp': False, 'epochs': 3, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
04/10/2021 04:24:30:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 04:26:27:sharding script was run with following arguments: {'shard_size': 32}
04/10/2021 04:26:28:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 04:26:29:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 04:26:59:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 04:27:52:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 04:34:13:sharding script was run with following arguments: {'shard_size': 32}
04/10/2021 04:34:14:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 04:38:37:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 04:48:05:sharding script was run with following arguments: {'shard_size': 32}
04/10/2021 04:50:07:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 04:50:42:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 04:50:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:50:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 04:55:36:trainer script was run with following arguments: {'amp': False, 'epochs': 3, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
04/10/2021 04:59:50:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 05:01:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:01:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:04:15:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:07:58:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:08:08:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:08:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:08:18:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:08:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:08:31:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:08:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:08:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:10:00:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:10:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:11:07:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:13:33:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:14:27:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:14:46:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:15:01:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:15:55:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:16:08:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:17:16:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:17:38:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:17:53:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:19:01:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:19:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:19:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:19:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 05:19:26:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 05:43:35:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:45:43:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:46:23:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:46:59:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:48:10:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:48:46:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:49:37:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:51:00:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:51:29:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:52:17:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 05:52:25:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 06:03:28:sharding script was run with following arguments: {'shard_size': 32}
04/10/2021 06:08:24:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 06:09:10:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
04/10/2021 06:10:11:data_stat script was run with following arguments: {'viz_samples': 7}
04/10/2021 06:10:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:10:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
04/10/2021 06:19:16:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 06:20:48:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 06:21:00:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 06:21:18:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/10/2021 06:21:36:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:02:43:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:04:00:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:04:20:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:04:25:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:05:24:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:11:16:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:21:32:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:21:53:sharding script was run with following arguments: {'shard_size': 32}
05/10/2021 10:24:06:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 10:24:43:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 10:24:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:24:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 10:31:15:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:32:50:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:35:59:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:36:24:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:37:03:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:41:53:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 10:57:07:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:15:55:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:16:03:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:16:27:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:17:16:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:18:31:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:19:28:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:21:03:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:21:21:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:24:07:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:24:32:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:25:55:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:27:47:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:28:27:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:29:05:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:29:14:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:29:56:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:30:03:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:38:17:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:38:33:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:38:45:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:39:14:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:39:52:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:47:16:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:54:51:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:55:56:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:57:44:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 11:58:10:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:00:57:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:15:16:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:17:50:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:20:55:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:21:07:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:21:25:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:22:23:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:30:35:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:30:46:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:31:11:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:39:01:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:39:48:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:41:16:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:41:50:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:41:56:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:48:31:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:49:51:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:51:16:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:52:45:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:54:39:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:56:15:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:57:15:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:57:31:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:57:45:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:58:27:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:59:01:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 12:59:17:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 01:00:41:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 01:01:00:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 01:02:03:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 01:06:46:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 01:12:54:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 01:34:40:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 01:55:04:sharding script was run with following arguments: {'shard_size': 32}
05/10/2021 01:57:31:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 01:58:00:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 01:58:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 01:58:59:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 01:59:33:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 02:00:35:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 02:02:00:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 02:03:10:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 02:04:07:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 02:06:15:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 02:07:10:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
05/10/2021 02:07:11:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
05/10/2021 03:21:24:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 03:41:53:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:43:37:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:43:50:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:44:05:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:44:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:44:35:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:45:21:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:46:10:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:46:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:46:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:46:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:46:49:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:46:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:47:14:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:47:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:47:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:47:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:47:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:55:53:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 03:56:57:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 03:57:47:sharding script was run with following arguments: {'shard_size': 32}
05/10/2021 03:58:07:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 03:58:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:58:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 03:58:37:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 04:06:13:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 04:09:11:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 04:11:52:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
05/10/2021 04:36:50:sharding script was run with following arguments: {'shard_size': 32}
05/10/2021 04:38:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 04:39:34:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 04:39:59:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 04:39:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:14:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
05/10/2021 04:40:27:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
05/10/2021 04:40:53:data_stat script was run with following arguments: {'viz_samples': 7}
05/10/2021 04:40:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:40:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
05/10/2021 04:44:36:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
05/10/2021 04:44:37:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
06/10/2021 10:41:29:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 10:41:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:41:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:22:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 10:42:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:42:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:48:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 10:46:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:46:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:47:35:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
06/10/2021 10:48:22:sharding script was run with following arguments: {'shard_size': 32}
06/10/2021 10:53:50:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
06/10/2021 10:56:49:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 10:56:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:56:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:57:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:57:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 10:57:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:05:54:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
06/10/2021 11:06:18:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
06/10/2021 11:06:39:sharding script was run with following arguments: {'shard_size': 32}
06/10/2021 11:06:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
06/10/2021 11:06:49:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:06:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:06:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:08:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:28:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:33:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:28:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:28:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:26:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:29:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:29:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:29:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:30:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:40:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:30:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:30:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:16:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:31:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:31:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:22:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:32:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:32:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:12:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:33:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:33:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:37:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:34:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:34:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:34:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:35:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:35:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:12:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:36:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:36:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:40:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:41:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:41:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:16:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:44:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:44:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:02:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:45:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:47:58:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:48:08:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:48:17:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:48:37:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:49:24:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:49:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:49:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:38:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 11:59:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 11:59:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:25:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:01:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:01:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:27:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:02:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:57:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:02:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:02:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:24:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:03:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:03:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:06:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:03:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:09:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:09:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:26:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:12:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:12:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:21:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:15:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:15:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:08:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:18:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:18:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:47:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:02:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:22:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:57:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:22:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:22:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:33:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:23:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:23:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:20:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:24:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:24:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:12:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:26:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:26:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:11:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:47:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:27:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:27:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:44:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:28:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:28:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:05:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:30:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:30:39:No handles with labels found to put in legend.
06/10/2021 12:31:00:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:31:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:31:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:02:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:33:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:34:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:33:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:33:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:34:59:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:34:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:34:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:34:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:27:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:35:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:35:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:01:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:41:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:41:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:23:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:42:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:42:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:16:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:43:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:02:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:44:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:31:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:44:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:44:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:17:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 12:45:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:45:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 12:48:54:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
06/10/2021 12:59:52:sharding script was run with following arguments: {'shard_size': 32}
06/10/2021 01:04:34:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
06/10/2021 01:07:18:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 01:07:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 01:12:56:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 01:12:57:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
06/10/2021 01:39:13:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
06/10/2021 01:39:53:sharding script was run with following arguments: {'shard_size': 32}
06/10/2021 03:15:35:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 03:15:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:15:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:16:33:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
06/10/2021 03:19:36:data_stat script was run with following arguments: {'viz_samples': 7}
06/10/2021 03:19:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:19:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
06/10/2021 03:35:33:trainer script was run with following arguments: {'hiper_optim': True, 'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 03:38:08:trainer script was run with following arguments: {'hiper_optim': True, 'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:16:58:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr.1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr.2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay.1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay.2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:17:08:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr.1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr.2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay.1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay.2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:21:07:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr.1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr.2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay.1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay.2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:21:36:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr.1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr.2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay.1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay.2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:22:40:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr.1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr.2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay.1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay.2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:26:54:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:27:27:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:30:20:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:31:21:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:31:41:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:38:20:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 5, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:40:27:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 5, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:41:19:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 5, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:41:48:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 5, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:43:21:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 5, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:46:30:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:54:21:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 04:59:06:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:03:02:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:10:23:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001, 0.00015, 0.0002, 0.00025], 'lr_2': [0.0001, 0.00015, 0.0002, 0.00025, 0.0003, 0.00035, 0.0004], 'weight_decay_1': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:15:27:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:32:11:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:32:16:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05, 5e-05, 0.0001, 0.00015, 0.0002]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:41:07:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:41:09:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05, 5e-05]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:44:43:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:44:45:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05, 5e-05]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:47:31:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:47:34:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05, 5e-05]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:47:40:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:47:43:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:48:52:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:48:56:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:50:10:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:50:14:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
06/10/2021 05:56:53:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.5, 'viz_samples': 3}
06/10/2021 05:56:56:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'hiper_optim': {'activate': True, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
07/10/2021 04:06:54:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.5, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
07/10/2021 04:06:57:data_stat script was run with following arguments: {'viz_samples': 7}
07/10/2021 04:06:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:06:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:06:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:06:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:06:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:20:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.5, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 10}
07/10/2021 04:07:24:data_stat script was run with following arguments: {'viz_samples': 7}
07/10/2021 04:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:07:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:34:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.5, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 30}
07/10/2021 04:37:41:data_stat script was run with following arguments: {'viz_samples': 7}
07/10/2021 04:37:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:37:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:19:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 30}
07/10/2021 04:39:25:data_stat script was run with following arguments: {'viz_samples': 20}
07/10/2021 04:39:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
07/10/2021 04:39:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:05:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
08/10/2021 10:38:09:data_stat script was run with following arguments: {'viz_samples': 7}
08/10/2021 10:38:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:38:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 10:55:42:sharding script was run with following arguments: {'shard_size': 32}
08/10/2021 10:55:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.3, 'viz_samples': 3}
08/10/2021 10:55:49:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.0, 'viz_samples': 3}
08/10/2021 10:57:20:sharding script was run with following arguments: {'shard_size': 32}
08/10/2021 10:57:22:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.3, 'viz_samples': 3}
08/10/2021 10:57:25:trainer script was run with following arguments: {'amp': False, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 10:57:39:sharding script was run with following arguments: {'shard_size': 32}
08/10/2021 10:57:41:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.3, 'viz_samples': 3}
08/10/2021 10:57:43:trainer script was run with following arguments: {'amp': False, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 10:58:41:sharding script was run with following arguments: {'shard_size': 32}
08/10/2021 10:58:43:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.3, 'viz_samples': 3}
08/10/2021 10:58:46:trainer script was run with following arguments: {'amp': False, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 10:59:41:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.0, 'viz_samples': 3}
08/10/2021 10:59:43:trainer script was run with following arguments: {'amp': False, 'epochs': 5, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 1}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 11:01:36:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:10:41:sharding script was run with following arguments: {'shard_size': 32}
08/10/2021 11:10:42:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.3, 'viz_samples': 3}
08/10/2021 11:10:45:trainer script was run with following arguments: {'amp': False, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 11:11:30:sharding script was run with following arguments: {'shard_size': 32}
08/10/2021 11:11:32:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.3, 'viz_samples': 3}
08/10/2021 11:11:34:trainer script was run with following arguments: {'amp': False, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 11:12:20:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.0, 'valid_ratio': 0.0, 'viz_samples': 3}
08/10/2021 11:12:22:trainer script was run with following arguments: {'amp': False, 'epochs': 5, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 1}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 11:32:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:33:04:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 224, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
08/10/2021 11:33:26:sharding script was run with following arguments: {'shard_size': 32}
08/10/2021 11:33:31:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
08/10/2021 11:33:34:data_stat script was run with following arguments: {'viz_samples': 7}
08/10/2021 11:33:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:33:53:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': 32}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': 32}}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'train'}}], 'before_step': [], 'before_epoch': []}}
08/10/2021 11:33:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:35:00:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:35:43:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:36:01:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:36:10:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:36:30:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:38:15:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:38:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 11:58:46:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:59:01:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:59:32:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 11:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:00:45:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 12:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:45:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 12:26:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 12:26:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 01:14:32:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:15:12:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:15:38:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:17:25:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:17:37:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:18:06:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:18:24:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:19:09:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:20:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:24:26:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:24:31:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:24:45:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:25:24:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:25:37:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:25:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:27:02:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:27:13:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:28:03:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:28:25:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:28:39:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:29:16:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:29:44:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:29:57:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:30:01:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:30:15:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:30:36:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 01:31:02:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 04:53:27:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 04:54:16:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 04:54:42:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 04:55:15:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 04:55:27:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 04:55:48:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 04:56:07:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:00:38:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:00:57:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:01:21:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:01:51:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:06:48:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.Flipper': {'probability': 0.5}}, {'src.transforms.augmentations.Jitter': {}}], 'valid': '$dataset_factory.augmentations.train$', 'test': '$dataset_factory.augmentations.train$'}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 3}
08/10/2021 05:07:00:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:08:28:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:22:34:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:22:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:22:57:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:22:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:24:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:23:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:23:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:23:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:51:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:24:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:24:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:25:43:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:25:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:36:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:26:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:46:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:26:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:26:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:27:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:05:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:28:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:21:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:28:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:55:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:28:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:28:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:29:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:35:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:32:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:32:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:01:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:33:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:33:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:06:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:34:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:19:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:34:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:34:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:47:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:35:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:35:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:09:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:36:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:56:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:36:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:07:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:37:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:37:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:16:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:52:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:54:24:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:54:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:54:53:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:54:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:54:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:19:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:55:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:52:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:55:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:56:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:23:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:58:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:58:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:58:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:19:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 05:59:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 05:59:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:23:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 06:00:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:46:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 06:02:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:02:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:36:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 06:03:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 06:03:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:03:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:04:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 06:04:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:04:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:37:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 5}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 5}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
08/10/2021 06:05:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
08/10/2021 06:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
09/10/2021 01:06:01:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
11/10/2021 10:38:19:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
11/10/2021 10:38:37:sharding script was run with following arguments: {'shard_size': 16}
11/10/2021 10:38:40:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [{'src.transforms.transforms.To_Tensor': {'mean': [103.2342, 108.952, 100.1419], 'std': [48.6281, 44.4967, 41.9143], 'input_type': '%np.float32%', 'label_type': '%np.int64%'}}], 'valid': '$dataset_factory.tensor_transf.train$', 'test': '$dataset_factory.tensor_transf.train$'}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 10:38:55:data_stat script was run with following arguments: {'viz_samples': 20}
11/10/2021 10:38:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:38:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:38:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:38:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:38:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:38:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:39:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 10:40:00:trainer script was run with following arguments: {'amp': True, 'epochs': 100, 'device': 'cuda', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
11/10/2021 10:40:36:trainer script was run with following arguments: {'amp': False, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
11/10/2021 10:54:29:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}, 'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}, 'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 10:54:49:trainer script was run with following arguments: {'amp': False, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
11/10/2021 10:56:51:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
11/10/2021 10:56:53:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}, 'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}, 'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 10:58:42:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}, 'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}, 'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 10:59:21:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}, 'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}, 'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:00:16:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}, 'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}, 'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:01:25:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}, 'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}, 'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:01:46:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}, 'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}, 'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:05:45:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:05:55:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:05:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:05:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:05:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:05:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:30:45:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:33:06:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
11/10/2021 11:33:41:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
11/10/2021 11:34:03:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 10}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:34:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:34:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:35:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:36:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:36:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:36:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:36:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:36:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:36:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:38:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:39:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:42:48:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:42:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:42:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:42:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:42:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:43:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:44:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:45:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:46:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:46:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:46:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:46:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:46:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:46:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:53:28:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:53:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:53:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:53:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:53:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:53:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:53:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:54:41:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:54:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:54:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:54:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:54:56:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:55:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:55:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:56:56:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:57:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:12:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 11:57:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:57:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:58:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 11:59:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:00:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:02:20:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:03:22:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:03:43:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:03:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:03:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:06:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:06:10:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:06:25:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:06:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:07:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:08:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:09:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:22:53:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:23:07:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 12:23:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:23:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:24:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:25:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 12:26:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 04:07:18:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 04:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 04:08:00:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
11/10/2021 04:08:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
11/10/2021 04:49:02:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 04:49:57:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 04:50:49:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 04:51:02:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 04:51:45:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 04:53:31:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:01:05:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:01:56:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:02:26:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:02:58:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:03:06:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:03:30:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:03:40:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:03:54:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:04:34:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:04:52:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:05:20:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:05:42:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:06:10:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:06:41:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:07:11:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:09:18:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
11/10/2021 05:10:38:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 10:27:57:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 10:43:49:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 10:44:57:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 10:45:26:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 10:47:35:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 10:47:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:47:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:49:28:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 10:54:03:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 10:54:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:53:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 10:54:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:54:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:55:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 10:57:41:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:00:48:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:00:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:54:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:01:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:01:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:41:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:02:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:02:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:03:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:01:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:04:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:00:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:05:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:26:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:05:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:05:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:06:43:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:08:19:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:08:47:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:09:14:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:11:36:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:12:04:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:12:42:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:12:51:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:13:01:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:13:29:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:13:47:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:14:08:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:35:59:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
12/10/2021 11:36:20:sharding script was run with following arguments: {'shard_size': 16}
12/10/2021 11:36:24:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 11:36:40:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:36:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:36:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:37:18:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:37:21:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:37:54:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
12/10/2021 11:38:15:sharding script was run with following arguments: {'shard_size': 16}
12/10/2021 11:38:19:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 11:38:34:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
12/10/2021 11:41:00:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
12/10/2021 11:41:17:sharding script was run with following arguments: {'shard_size': 16}
12/10/2021 11:41:21:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 11:43:07:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
12/10/2021 11:43:10:sharding script was run with following arguments: {'shard_size': 16}
12/10/2021 11:43:13:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 11:44:15:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
12/10/2021 11:44:38:sharding script was run with following arguments: {'shard_size': 16}
12/10/2021 11:44:41:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 11:45:01:data_stat script was run with following arguments: {'viz_samples': 20}
12/10/2021 11:45:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
12/10/2021 11:45:40:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:45:41:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:46:05:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:46:08:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:49:00:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:50:24:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:51:27:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:51:39:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:51:43:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:55:28:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:58:25:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 11:58:28:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:59:17:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:59:23:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:59:54:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 11:59:59:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 12:00:34:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 12:03:14:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 12:06:18:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 12:07:29:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 12:27:53:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 12:33:23:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 12:33:42:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 12:37:01:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 12:39:12:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 12:39:21:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:50:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:50:52:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:51:12:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:51:52:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:52:22:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:53:55:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:55:58:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
12/10/2021 03:56:56:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 03:58:02:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 03:58:13:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 03:58:28:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 03:59:36:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 03:59:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:00:13:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:00:19:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:00:52:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:01:24:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:01:51:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:03:52:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:04:00:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:05:01:evaluation script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:36:27:trainer script was run with following arguments: {'amp': False, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/10/2021 04:36:42:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:37:34:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:38:02:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:38:56:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:39:08:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
12/10/2021 04:40:24:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 09:02:18:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:06:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:11:07:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:11:33:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:12:17:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:12:45:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:12:56:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:13:51:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:14:03:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:14:35:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:14:43:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:17:27:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 09:17:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
13/10/2021 01:24:58:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
13/10/2021 01:25:45:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
13/10/2021 01:26:12:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
13/10/2021 01:27:42:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
13/10/2021 01:29:11:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 448, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
13/10/2021 01:48:45:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:49:12:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:49:25:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:50:23:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:50:55:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:51:54:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:52:12:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:53:02:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:53:27:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:55:08:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:56:08:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:57:09:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:57:18:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:57:31:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:59:14:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 01:59:40:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 02:00:14:evaluation script was run with following arguments: {'device': 'cpu', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 02:52:51:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'cv2.dilate': ['%img%', 'None']}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:04:42:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:05:29:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:06:50:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:11:45:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:12:07:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:13:15:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:14:30:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:14:49:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:15:58:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:17:00:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:17:45:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:18:19:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:18:28:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:21:23:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:21:37:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:22:06:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:22:57:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
13/10/2021 06:23:26:evaluation script was run with following arguments: {'device': 'cpu', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 3}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 3}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
14/10/2021 11:03:03:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
14/10/2021 12:55:48:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 12:55:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 12:56:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:00:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:03:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:03:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:07:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:11:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:04:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:04:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:09:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:14:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:07:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:44:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:07:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:07:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:08:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:45:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:17:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:17:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:18:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:46:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:19:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:19:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:20:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:31:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:21:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:21:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:28:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:27:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:27:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:31:35:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:34:05:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:34:14:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:34:25:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:34:47:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:35:34:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:35:40:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:35:58:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:36:25:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:36:44:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:36:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:36:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:37:56:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:38:07:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:38:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:38:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:54:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:41:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:41:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:42:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:20:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:43:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:43:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:44:57:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:44:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:44:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:44:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:44:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:44:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:44:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:44:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:45:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:08:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:47:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:47:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:09:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:48:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:48:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:15:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:51:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:45:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:51:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:51:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:40:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:52:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:52:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:36:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:53:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:53:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:30:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:54:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:50:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:54:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:54:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:47:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:55:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:55:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:56:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:18:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:58:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:58:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:04:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:59:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:43:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 01:59:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 01:59:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:27:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 02:00:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:00:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:17:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 02:01:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:01:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:21:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 02:03:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:03:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:41:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 02:06:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:06:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:07:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:08:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 02:13:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:13:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:37:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 02:47:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:47:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 02:48:53:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
14/10/2021 03:06:31:sharding script was run with following arguments: {'shard_size': 16}
14/10/2021 03:10:24:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 03:10:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:10:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:10:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:10:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:10:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:10:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:15:data_stat script was run with following arguments: {'viz_samples': 20}
14/10/2021 03:11:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:11:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
14/10/2021 03:55:19:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
14/10/2021 03:55:40:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
14/10/2021 03:59:05:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
14/10/2021 03:59:30:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
14/10/2021 04:02:23:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:16:33:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:23:18:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:26:06:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:34:30:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:34:47:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
15/10/2021 09:35:03:sharding script was run with following arguments: {'shard_size': 16}
15/10/2021 09:37:10:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:41:14:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
15/10/2021 09:41:34:sharding script was run with following arguments: {'shard_size': 16}
15/10/2021 09:43:45:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:47:55:data_stat script was run with following arguments: {'viz_samples': 20}
15/10/2021 09:48:38:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:53:39:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 09:57:01:data_stat script was run with following arguments: {'viz_samples': 20}
15/10/2021 09:57:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 09:57:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 10:04:50:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:04:52:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
15/10/2021 10:22:04:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:23:13:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:24:27:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:26:27:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:27:35:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:28:41:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:28:57:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:29:22:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:30:01:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:48:14:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:49:03:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:50:02:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:50:26:trainer script was run with following arguments: {'amp': False, 'mixup_factor': 0.5, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 10:50:54:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
15/10/2021 11:06:02:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 11:10:36:trainer script was run with following arguments: {'amp': True, 'mixup_factor': -1, 'epochs': 1, 'device': 'cuda', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 03:15:30:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
15/10/2021 03:15:49:sharding script was run with following arguments: {'shard_size': 16}
15/10/2021 03:15:53:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 03:15:58:data_stat script was run with following arguments: {'viz_samples': 20}
15/10/2021 03:16:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:16:38:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
15/10/2021 03:16:56:sharding script was run with following arguments: {'shard_size': 16}
15/10/2021 03:17:00:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 03:17:05:data_stat script was run with following arguments: {'viz_samples': 20}
15/10/2021 03:17:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:17:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:17:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:17:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:17:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:17:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:17:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:17:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:18:53:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
15/10/2021 03:19:12:sharding script was run with following arguments: {'shard_size': 16}
15/10/2021 03:19:15:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 03:19:35:data_stat script was run with following arguments: {'viz_samples': 20}
15/10/2021 03:19:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:19:56:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:20:09:trainer script was run with following arguments: {'amp': True, 'mixup_factor': -1, 'epochs': 1, 'device': 'cuda', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 03:20:28:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
15/10/2021 03:20:44:sharding script was run with following arguments: {'shard_size': 16}
15/10/2021 03:20:47:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 03:21:03:data_stat script was run with following arguments: {'viz_samples': 20}
15/10/2021 03:21:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:07:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:08:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:09:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:10:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:11:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:12:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:13:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
15/10/2021 03:21:38:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 03:21:39:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
15/10/2021 03:49:11:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
15/10/2021 03:50:11:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
15/10/2021 03:57:47:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
15/10/2021 07:16:09:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
15/10/2021 07:16:29:trainer script was run with following arguments: {'amp': True, 'mixup_factor': -1, 'epochs': 10, 'device': 'cuda', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
15/10/2021 07:16:31:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [{'src.transforms.transforms.Dilation': {'iterations': 1, 'kernel_size': 3}}], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
18/10/2021 12:55:19:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
18/10/2021 12:55:31:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
18/10/2021 12:55:52:sharding script was run with following arguments: {'shard_size': 16}
18/10/2021 12:55:57:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
18/10/2021 12:56:19:data_stat script was run with following arguments: {'viz_samples': 20}
18/10/2021 12:56:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:56:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 12:57:02:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
18/10/2021 12:57:05:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
18/10/2021 12:58:20:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 400}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
18/10/2021 01:05:24:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 410}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
18/10/2021 01:06:04:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
18/10/2021 01:06:24:data_stat script was run with following arguments: {'viz_samples': 20}
18/10/2021 01:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:47:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:06:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
18/10/2021 01:07:04:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
18/10/2021 01:07:06:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
18/10/2021 01:08:00:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
18/10/2021 01:08:01:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
19/10/2021 11:05:29:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
19/10/2021 11:05:48:sharding script was run with following arguments: {'shard_size': 16}
19/10/2021 11:05:51:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
19/10/2021 11:06:12:data_stat script was run with following arguments: {'viz_samples': 20}
19/10/2021 11:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:14:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:15:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:16:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:17:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:18:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:19:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:06:53:trainer script was run with following arguments: {'amp': True, 'mixup_factor': -1, 'epochs': 10, 'device': 'cuda', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 11:17:38:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
19/10/2021 11:17:56:sharding script was run with following arguments: {'shard_size': 16}
19/10/2021 11:18:00:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 448}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
19/10/2021 11:18:19:data_stat script was run with following arguments: {'viz_samples': 20}
19/10/2021 11:18:20:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:21:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:22:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:23:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:24:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:25:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:26:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:27:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:28:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:29:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:30:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:31:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:32:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:33:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:40:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:18:59:trainer script was run with following arguments: {'amp': True, 'mixup_factor': -1, 'epochs': 10, 'device': 'cuda', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 11:19:03:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
19/10/2021 11:19:29:data_stat script was run with following arguments: {'viz_samples': 20}
19/10/2021 11:19:34:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:35:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:36:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:37:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:38:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:39:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:41:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:42:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:43:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:44:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:45:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:46:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:48:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:49:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:50:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:51:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:52:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:53:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:54:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:55:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:57:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:58:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:19:59:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:00:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:01:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:02:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:03:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:04:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:05:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 11:20:06:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
19/10/2021 06:44:43:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
19/10/2021 06:44:49:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:45:29:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
19/10/2021 06:45:52:sharding script was run with following arguments: {'shard_size': 16}
19/10/2021 06:45:56:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
19/10/2021 06:46:18:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:49:32:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:52:13:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:52:23:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:52:39:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:53:33:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:54:56:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 06:55:19:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:01:58:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:07:26:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:09:16:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:13:00:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:13:26:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:14:52:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:15:20:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:16:43:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 07:17:41:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.gaussian_ce.GaussianCE': {'kernel_size': 5, 'sigma': 3, 'c': 200}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
19/10/2021 08:13:07:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
21/10/2021 11:02:29:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
21/10/2021 11:03:33:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
22/10/2021 04:38:17:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 10, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
22/10/2021 05:07:29:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 10, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hiper_optim': {'activate': False, 'epochs': 0, 'lr_1': [0.0001], 'lr_2': [0.0001], 'weight_decay_1': [1.1e-05], 'weight_decay_2': [1e-05]}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
27/10/2021 01:13:20:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:16:14:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:16:54:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:17:11:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:24:22:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:24:39:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:24:46:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:27:27:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:27:40:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:28:11:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:28:38:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:28:44:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:29:42:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:30:31:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:32:03:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:33:46:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:34:01:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:54:15:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:55:18:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:55:50:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
27/10/2021 01:56:37:sharding script was run with following arguments: {'shard_size': 16}
27/10/2021 01:56:46:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 01:58:13:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 02:00:34:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
27/10/2021 02:00:54:invariance_test script was run with following arguments: {'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 02:24:46:invariance_test script was run with following arguments: {'device': '$trainer.device$', 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%dataset%', 'batch_size': 1}}, 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}]}, 'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 02:29:38:invariance_test script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}]}, 'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 02:58:04:invariance_test script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}]}, 'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}]}
27/10/2021 05:10:52:invariance_test script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}]}, 'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.AffineJitter': {'rotation': [-180, 180], 'scale': [1, 1], 'shear': [-5, 5]}}]}
27/10/2021 05:32:31:invariance_test script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}]}, 'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.5, 'contrast': 0.4, 'saturation': 0.4, 'hue': 0.15}}, {'src.transforms.augmentations.AffineJitter': {'rotation': [-180, 180], 'scale': [1, 1], 'shear': [-5, 5]}}, {'src.transforms.augmentations.AffineJitter': {'rotation': [-180, 180], 'scale': [0.7, 2], 'shear': [0, 0]}}]}
27/10/2021 05:35:57:invariance_test script was run with following arguments: {'device': '$trainer.device$', 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}]}, 'attributes': [{'src.transforms.augmentations.Identity': {}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [-180, 180]}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.5, 'contrast': 0.4, 'saturation': 0.4, 'hue': 0.15}}, {'src.transforms.augmentations.AffineJitter': {'rotation': [-180, 180], 'scale': [1, 1], 'shear': [-5, 5]}}, {'src.transforms.augmentations.AffineJitter': {'rotation': [-180, 180], 'scale': [0.7, 2], 'shear': [0, 0]}}]}
02/11/2021 02:53:23:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
02/11/2021 02:53:53:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
02/11/2021 02:54:24:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:10:45:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:14:22:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:17:55:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:18:17:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:18:38:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:23:33:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:25:39:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:28:49:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:29:01:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
03/11/2021 02:29:18:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.HyperBandScheduler': {'metric': 'performance', 'mode': 'max'}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 01:58:26:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.FIFOScheduler': {}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 01:58:41:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.FIFOScheduler': {}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 01:58:56:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'scheduler': {'ray.tune.schedulers.FIFOScheduler': {}}, 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 01:58:56:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 02:00:36:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:00:36:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 02:02:08:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:02:08:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 02:02:21:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:02:21:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 02:03:45:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:09:18:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:09:18:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 02:13:18:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:13:18:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 02:18:05:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:20:23:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:20:55:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:21:07:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:22:48:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:23:13:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:23:38:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:23:46:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:23:59:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:24:14:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:27:47:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:33:06:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:33:47:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:38:03:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:40:22:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'gpu': 1}, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 02:40:23:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:21:49:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:21:49:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:25:41:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:25:41:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:26:08:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:26:09:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:28:19:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:28:19:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:28:52:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:28:52:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:30:25:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:30:25:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:31:05:evaluation script was run with following arguments: {'device': '$trainer.device$', 'postprocess': [], 'observers': {'after_epoch': [], 'before_epoch': [], 'before_step': [], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'test'}}, {'src.observers.subscribers.StepPredictionSaver': {'path': 'evaluation/artifacts/predictions', 'period': 1}}, {'src.observers.subscribers.WorstK': {'path': 'evaluation/artifacts/worstK', 'k': 10}}, {'src.observers.subscribers.BestK': {'path': 'evaluation/artifacts/bestK', 'k': 10}}]}, 'dataloader': {'torch.utils.data.DataLoader': {'dataset': '%test_db%', 'batch_size': 1}}}
04/11/2021 04:31:19:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
04/11/2021 04:31:38:sharding script was run with following arguments: {'shard_size': 16}
04/11/2021 04:31:43:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
04/11/2021 04:32:05:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:32:05:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:33:25:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:35:14:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'bayes', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:35:14:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:42:56:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:42:56:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 04:43:22:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 04:43:22:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
04/11/2021 05:01:56:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
04/11/2021 05:01:56:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 10:32:24:sharding script was run with following arguments: {'shard_size': 4}
05/11/2021 10:32:30:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 10:33:00:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 10:33:00:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 10:33:26:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 10:33:26:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 10:33:55:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 10:33:55:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 10:34:46:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 10:34:46:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 11:31:40:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 11:31:40:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 11:57:44:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 11:58:29:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:05:15:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:06:38:Session not detected. You should not be calling `report` outside `tune.run` or while using the class API. 
05/11/2021 12:06:38:  File "/home/doms/anaconda3/envs/sat/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/doms/git/DeepSat/runners/trainer.py", line 86, in <module>
    process()
  File "/home/doms/git/DeepSat/runners/trainer.py", line 83, in process
    trainer.process(**processed_args)
  File "/home/doms/git/DeepSat/pipeline/trainer.py", line 75, in process
    if hypertuner.active:
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/bdb.py", line 112, in dispatch_line
    self.user_line(frame)
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/pdb.py", line 259, in user_line
    self.interaction(frame, None)
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/pdb.py", line 350, in interaction
    self._cmdloop()
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/pdb.py", line 319, in _cmdloop
    self.cmdloop()
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/cmd.py", line 138, in cmdloop
    stop = self.onecmd(line)
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/pdb.py", line 416, in onecmd
    return cmd.Cmd.onecmd(self, line)
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/cmd.py", line 216, in onecmd
    return self.default(line)
  File "/home/doms/anaconda3/envs/sat/lib/python3.7/pdb.py", line 374, in default
    exec(code, globals, locals)
  File "<stdin>", line 1, in <module>
  File "/home/doms/git/DeepSat/pipeline/trainer.py", line 49, in _hy_trainable
    tune.report(performance=mIoU)

05/11/2021 12:08:25:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:08:25:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 12:08:47:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:08:47:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 12:21:32:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:21:32:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 12:27:27:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:27:27:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 12:54:00:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:54:00:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 12:54:25:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:54:25:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 12:56:01:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 12:56:01:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:03:23:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:03:23:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:17:19:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:17:19:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:17:45:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:17:45:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:19:32:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:19:32:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:20:08:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:20:46:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:22:01:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:22:01:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:22:47:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:22:47:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:23:21:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:24:19:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:24:19:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:26:14:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:26:14:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:27:34:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:27:34:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:28:54:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:28:54:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:29:14:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:29:14:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:29:31:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:29:31:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:29:57:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:29:57:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:31:55:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:32:22:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:32:46:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:33:58:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:34:49:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:35:04:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:36:32:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:36:32:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
05/11/2021 01:37:13:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:40:44:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:41:33:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:41:58:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:42:20:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:42:59:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:43:17:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:44:58:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:45:46:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:45:59:dataset_factory script was run with following arguments: {'dataset': 'src.datasets.tar_dataset.TarDataset', 'augmentations': {'train': [{'src.transforms.augmentations.RandomCropper': {'size': 420}}, {'src.transforms.augmentations.ColorJitter': {'brightness': 0.3, 'contrast': 0.8, 'saturation': 0.3, 'hue': 0.1}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': True}}, {'src.transforms.augmentations.Flipper': {'probability': 0.5, 'is_horizontal': False}}, {'src.transforms.augmentations.RandomRotation': {'rotation': [0, 90]}}], 'valid': '$dataset_factory.augmentations.train$', 'test': []}, 'tensor_transf': {'train': [], 'valid': [], 'test': []}, 'test_ratio': 0.3, 'valid_ratio': 0.1, 'viz_samples': 20}
05/11/2021 01:46:53:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
05/11/2021 01:46:53:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
08/11/2021 09:17:23:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuning': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
08/11/2021 09:18:22:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
08/11/2021 03:59:42:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:06:26:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 0, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:06:29:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:06:58:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:07:54:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:08:05:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:08:46:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:09:12:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:10:01:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:10:36:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:10:58:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:14:09:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:17:36:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:19:10:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:21:14:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:23:00:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:48:43:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:48:44:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
09/11/2021 11:49:22:trainer script was run with following arguments: {'amp': False, 'mixup_factor': -1, 'epochs': 1, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': True, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 50, 'num_samples': 10}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 11:49:22:Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
09/11/2021 12:41:59:trainer script was run with following arguments: {'active': True, 'amp': False, 'mixup_factor': -1, 'epochs': 100, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 1, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
09/11/2021 12:42:14:trainer script was run with following arguments: {'active': False, 'amp': False, 'mixup_factor': -1, 'epochs': 100, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'torch.nn.CrossEntropyLoss': {'ignore_index': -1, 'reduction': 'mean'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 1, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/11/2021 07:18:13:trainer script was run with following arguments: {'active': False, 'amp': False, 'mixup_factor': -1, 'epochs': 100, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.losses.Focal_Loss': {'gamma': 0.5, 'type': 'exp'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 1, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
12/11/2021 07:22:01:trainer script was run with following arguments: {'active': False, 'amp': False, 'mixup_factor': -1, 'epochs': 100, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.losses.Focal_Loss': {'gamma': 0.5, 'type': 'exp'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 1, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
30/11/2021 04:04:28:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
30/11/2021 09:47:53:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
01/12/2021 03:45:39:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
27/12/2021 03:55:08:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
03/01/2022 12:29:49:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
13/01/2022 06:37:12:preprocess script was run with following arguments: {'dataset': 'src.datasets.inria.Inria', 'preprocess': [{'src.transforms.image_slicer.KernelSlicer': {'kernel_size': 600, 'overlap_perc': 0.15, 'strategy': 'crop'}}], 'format': 'png'}
21/01/2022 10:50:27:trainer script was run with following arguments: {'active': False, 'amp': False, 'mixup_factor': -1, 'epochs': 100, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.losses.Focal_Loss': {'gamma': 0.5, 'type': 'exp'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 1, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
21/01/2022 10:50:38:trainer script was run with following arguments: {'active': False, 'amp': False, 'mixup_factor': -1, 'epochs': 100, 'device': 'cpu', 'model': {'src.models.piramid_swiftnet.model.PiramidSwiftnet': {'num_classes': 2}}, 'dataloader': {'train': {'torch.utils.data.DataLoader': {'dataset': '%train_db%', 'batch_size': '$sharding.shard_size$'}}, 'valid': {'torch.utils.data.DataLoader': {'dataset': '%valid_db%', 'batch_size': '$sharding.shard_size$'}}}, 'loss_function': {'src.losses.losses.Focal_Loss': {'gamma': 0.5, 'type': 'exp'}}, 'hypertuner': {'active': False, 'search_space': {'lr1': '%ray.tune.uniform(2e-4, 6e-4)%', 'lr2': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd1': '%ray.tune.uniform(1e-4, 4e-4)%', 'wd2': '%ray.tune.uniform(1e-4, 4e-4)%', 'beta11': '%ray.tune.uniform(0.5, 1)%', 'beta12': '%ray.tune.uniform(0.5, 1)%', 'beta21': '%ray.tune.uniform(0.5, 1)%', 'beta22': '%ray.tune.uniform(0.5, 1)%'}, 'search_alg': 'basic', 'resources_per_trial': {'cpu': 1}, 'iterations': 1, 'num_samples': 1}, 'optimizer': {'torch.optim.Adam': {'params': [{'params': '%model.random_init_params()%', 'lr': 0.0004, 'weight_decay': 0.0001}, {'params': '%model.fine_tune_params()%', 'lr': 0.0001, 'weight_decay': 2.5e-05}], 'betas': [0.9, 0.99]}}, 'lr_scheduler': {'torch.optim.lr_scheduler.CosineAnnealingLR': {'optimizer': '%optimizer%', 'T_max': '$trainer.epochs$'}}, 'observers': {'after_epoch': [{'src.observers.subscribers.StdPrinter': {}}, {'src.observers.subscribers.MetricSaver': {'when': 'TEST', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.MetricSaver': {'when': 'TRAIN', 'path': 'trainer/artifacts'}}, {'src.observers.subscribers.EarlyStoper': {'lookback': 3, 'when': 'TEST'}}], 'after_step': [{'src.observers.subscribers.Confusion_Matrix': {'class_num': 2, 'metrics': ['%accuracy%', '%precission%', '%recall%', '%mIoU%']}}, {'src.observers.subscribers.Running_Loss': {'name': 'loss'}}], 'before_step': [], 'before_epoch': []}}
